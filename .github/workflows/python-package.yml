name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.12']

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest psycopg2 pandas scikit-learn dbt-core
          if (Test-Path requirements.txt) { pip install -r requirements.txt }

      - name: Set up PostgreSQL
        uses: ankane/setup-postgres@v1
        with:
          postgres-version: '14'
          database: test_db  # Correct parameter name
          username: ${{ secrets.DB_USER }}
          password: ${{ secrets.DB_PASS }}  # Use secret, correct parameter name
          

      - name: Create Database and User
        run: |
          psql -U postgres -d postgres -w -c "CREATE DATABASE test_db;" || true  # Handle existing database
          psql -U postgres -d postgres -w -c "CREATE USER IF NOT EXISTS ${{ secrets.DB_USER }} WITH PASSWORD '${{ secrets.DB_PASS }}';"
          psql -U postgres -d postgres -w -c "GRANT ALL PRIVILEGES ON DATABASE test_db TO ${{ secrets.DB_USER }};"
          psql -U postgres -d postgres -w -c "ALTER DATABASE test_db OWNER TO ${{ secrets.DB_USER }};"



      - name: Run API Caller
        run: |
          cd ${{ github.workspace }}/retail_pg
          python APIcaller.py
        env:
          DB_HOST: localhost
          DB_NAME: test_db
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}

      - name: Run DBT Models
        run: |
          cd ${{ github.workspace }}/retail_pg
          dbt run  # No need to call python here

      - name: Run Train Classifier
        run: |
          cd ${{ github.workspace }}/retail_pg
          python Train_Classifier.py
        env:
          DB_HOST: localhost
          DB_NAME: test_db
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: pytest  # Run from the root of the repository or specify path
